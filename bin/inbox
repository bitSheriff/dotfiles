#!/bin/bash

# Preamble of the Memo
INBOX_PRE=""
INBOX_POST=""

# Journal File where the memo gets added
INBOX_FILE="$INBOX"
INBOX_DIR="$(dirname -- $INBOX_FILE)"
LINKS_FILE="$INBOX_DIR/Save 4 Later.md"

create_inbox_file() {

    # line conter
    count=0
    filename=""

    while IFS= read -r line; do

        # just print the preamble on the first line
        if [ $count -eq 0 ]; then
            # the first line is the name of the file
            filename="$INBOX_DIR/$line.md"

            # write the name of the file as first Heading
            echo -e "# $line" >>"$filename"

        else
            # Process the remaining lines
            echo -e "$line" >>"$filename"
        fi

        # Increment the counter
        count=$((count + 1))
    done
}

save_link() {
    local title=$(gum input --placeholder "Title")
    local url=$(gum input --placeholder "URL")
    local notes=$(gum input --placeholder "Notes")

    echo -e "- [ ] [$title]($url)" >>"$LINKS_FILE"

    # add notes if provided
    if [[ ! -z "$notes" ]]; then
        echo -e "    - $notes" >>"$LINKS_FILE"
    fi

    echo -e "\n" >>"$LINKS_FILE"
}

OPTSTRING="cnlh"
while getopts ${OPTSTRING} opt; do
    case ${opt} in
    h) # help/usage
        echo -e "inbox [opt] [text]"
        echo -e "Little script to save text in the inbox file. If no text is provided at stdin, it will provide promt(s) to fill in some text. Collecting text with stdin makes it possible to parse output of other programs to the inbox file."
        echo -e "Usage:"
        echo -e "  -h ... Print this help/usage message"
        echo -e "  -c ... Puts the clipboard contents to the inbox file"
        echo -e "  -n ... Create a new file in the inbox for this item"
        echo -e "  -l ... Save a link, promts you to enter the name, url and some optional notes for this link"
        echo -e "         Links will get formated as a Todo"
        exit 0
        ;;
    c) # clipboard option
        echo -e "\n$(wl-paste)" >>"$INBOX_FILE"
        exit 0
        ;;
    n) # create new file
        create_inbox_file
        exit 0
        ;;
    l) # save link
        save_link
        exit 0
        ;;
    esac
done

# decide if the input was given as a positional argument or parsed into (stdin)
if [ $# -gt 0 ]; then
    # If there are arguments, join them into a single string and process
    input="$*"
    echo -e "\n$input\n" >>"$INBOX_FILE"
else
    # Otherwise, use gum write to get the input (stdin)
    input=$(gum write --header "Inbox" --show-line-numbers --char-limit 0)

    # line conter
    count=0

    while IFS= read -r line; do

        # just print the preamble on the first line
        if [ $count -eq 0 ]; then
            # Process the first line differently
            echo -e "\n$line" >>"$INBOX_FILE"

        else
            # Process the remaining lines
            echo -e "$line" >>"$INBOX_FILE"
        fi

        # Increment the counter
        count=$((count + 1))
    done <<<"$input"

    echo -e "\n" >>"$INBOX_FILE"

fi
